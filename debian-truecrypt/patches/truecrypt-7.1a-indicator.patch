diff --git a/Main/Forms/Forms.cpp b/Main/Forms/Forms.cpp
index 5825381..5b05125 100644
--- a/Main/Forms/Forms.cpp
+++ b/Main/Forms/Forms.cpp
@@ -1738,23 +1738,6 @@ PreferencesDialogBase::PreferencesDialogBase( wxWindow* parent, wxWindowID id, c
 	
 	sbSizer18->Add( CloseBackgroundTaskOnNoVolumesCheckBox, 0, wxALL, 5 );
 	
-	wxStaticBoxSizer* sbSizer26;
-	sbSizer26 = new wxStaticBoxSizer( new wxStaticBox( BackgroundTaskPanel, wxID_ANY, _("Task Icon Menu Items") ), wxVERTICAL );
-	
-	BackgroundTaskMenuMountItemsEnabledCheckBox = new wxCheckBox( BackgroundTaskPanel, wxID_ANY, _("Mount Favorite Volumes"), wxDefaultPosition, wxDefaultSize, 0 );
-	
-	sbSizer26->Add( BackgroundTaskMenuMountItemsEnabledCheckBox, 0, wxALL, 5 );
-	
-	BackgroundTaskMenuOpenItemsEnabledCheckBox = new wxCheckBox( BackgroundTaskPanel, wxID_ANY, _("Open Mounted Volumes"), wxDefaultPosition, wxDefaultSize, 0 );
-	
-	sbSizer26->Add( BackgroundTaskMenuOpenItemsEnabledCheckBox, 0, wxALL, 5 );
-	
-	BackgroundTaskMenuDismountItemsEnabledCheckBox = new wxCheckBox( BackgroundTaskPanel, wxID_ANY, _("Dismount Mounted Volumes"), wxDefaultPosition, wxDefaultSize, 0 );
-	
-	sbSizer26->Add( BackgroundTaskMenuDismountItemsEnabledCheckBox, 0, wxALL, 5 );
-	
-	sbSizer18->Add( sbSizer26, 1, wxEXPAND|wxALL, 5 );
-	
 	bSizer62->Add( sbSizer18, 0, wxEXPAND|wxALL, 5 );
 	
 	bSizer61->Add( bSizer62, 1, wxEXPAND|wxALL, 5 );
@@ -1772,6 +1755,9 @@ PreferencesDialogBase::PreferencesDialogBase( wxWindow* parent, wxWindowID id, c
 	
 	LogOnSizer = new wxStaticBoxSizer( new wxStaticBox( SystemIntegrationPage, wxID_ANY, _("Actions to Perform when User Logs On") ), wxVERTICAL );
 	
+	ConfigureAutostartButton = new wxButton( SystemIntegrationPage, wxID_ANY, _("Configure &Autostart..."), wxDefaultPosition, wxDefaultSize, 0 );
+	LogOnSizer->Add( ConfigureAutostartButton, 0, wxALL, 5 );
+	
 	StartOnLogonCheckBox = new wxCheckBox( SystemIntegrationPage, wxID_ANY, _("Start TrueCrypt Background Task"), wxDefaultPosition, wxDefaultSize, 0 );
 	
 	LogOnSizer->Add( StartOnLogonCheckBox, 0, wxALL, 5 );
@@ -2024,6 +2010,7 @@ PreferencesDialogBase::PreferencesDialogBase( wxWindow* parent, wxWindowID id, c
 	PreserveTimestampsCheckBox->Connect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( PreferencesDialogBase::OnPreserveTimestampsCheckBoxClick ), NULL, this );
 	BackgroundTaskEnabledCheckBox->Connect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( PreferencesDialogBase::OnBackgroundTaskEnabledCheckBoxClick ), NULL, this );
 	NoKernelCryptoCheckBox->Connect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( PreferencesDialogBase::OnNoKernelCryptoCheckBoxClick ), NULL, this );
+	ConfigureAutostartButton->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( PreferencesDialogBase::OnConfigureAutostartButtonClick ), NULL, this );
 	NoHardwareCryptoCheckBox->Connect( wxEVT_COMMAND_CHECKBOX_CLICKED, wxCommandEventHandler( PreferencesDialogBase::OnNoHardwareCryptoCheckBoxClick ), NULL, this );
 	SelectPkcs11ModuleButton->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( PreferencesDialogBase::OnSelectPkcs11ModuleButtonClick ), NULL, this );
 	HotkeyListCtrl->Connect( wxEVT_COMMAND_LIST_ITEM_DESELECTED, wxListEventHandler( PreferencesDialogBase::OnHotkeyListItemDeselected ), NULL, this );
diff --git a/Main/Forms/Forms.h b/Main/Forms/Forms.h
index cbc6f6e..6539328 100644
--- a/Main/Forms/Forms.h
+++ b/Main/Forms/Forms.h
@@ -551,11 +551,10 @@ namespace TrueCrypt
 			wxPanel* BackgroundTaskPanel;
 			wxCheckBox* BackgroundTaskEnabledCheckBox;
 			wxCheckBox* CloseBackgroundTaskOnNoVolumesCheckBox;
-			wxCheckBox* BackgroundTaskMenuMountItemsEnabledCheckBox;
-			wxCheckBox* BackgroundTaskMenuOpenItemsEnabledCheckBox;
-			wxCheckBox* BackgroundTaskMenuDismountItemsEnabledCheckBox;
 			wxPanel* SystemIntegrationPage;
 			wxStaticBoxSizer* LogOnSizer;
+			wxButton* ConfigureAutostartButton;
+			wxCheckBox* BackgroundTaskMenuDismountItemsEnabledCheckBox;
 			wxCheckBox* StartOnLogonCheckBox;
 			wxCheckBox* MountFavoritesOnLogonCheckBox;
 			wxCheckBox* MountDevicesOnLogonCheckBox;
@@ -595,6 +594,7 @@ namespace TrueCrypt
 			virtual void OnForceAutoDismountCheckBoxClick( wxCommandEvent& event ){ event.Skip(); }
 			virtual void OnPreserveTimestampsCheckBoxClick( wxCommandEvent& event ){ event.Skip(); }
 			virtual void OnBackgroundTaskEnabledCheckBoxClick( wxCommandEvent& event ){ event.Skip(); }
+			virtual void OnConfigureAutostartButtonClick( wxCommandEvent& event ){ event.Skip(); }
 			virtual void OnNoKernelCryptoCheckBoxClick( wxCommandEvent& event ){ event.Skip(); }
 			virtual void OnNoHardwareCryptoCheckBoxClick( wxCommandEvent& event ){ event.Skip(); }
 			virtual void OnSelectPkcs11ModuleButtonClick( wxCommandEvent& event ){ event.Skip(); }
diff --git a/Main/Forms/MainFrame.cpp b/Main/Forms/MainFrame.cpp
index cf313a8..273e35d 100644
--- a/Main/Forms/MainFrame.cpp
+++ b/Main/Forms/MainFrame.cpp
@@ -37,6 +37,7 @@
 namespace TrueCrypt
 {
 	MainFrame::MainFrame (wxWindow* parent) : MainFrameBase (parent),
+		indicator (NULL),
 		ListItemRightClickEventPending (false),
 		SelectedItemIndex (-1),
 		SelectedSlotNumber (0),
@@ -491,57 +492,6 @@ namespace TrueCrypt
 				Gui->AppendToMenu (*popup, _("Mount All Favorite Volumes"), this, wxCommandEventHandler (TaskBarIcon::OnMountAllFavoritesMenuItemSelected))->Enable (!Busy);
 				Gui->AppendToMenu (*popup, _("Dismount All Mounted Volumes"), this, wxCommandEventHandler (TaskBarIcon::OnDismountAllMenuItemSelected))->Enable (!Busy);
 				
-				// Favorite volumes
-				if (Gui->GetPreferences().BackgroundTaskMenuMountItemsEnabled && !Frame->FavoriteVolumesMenuMap.empty())
-				{
-					popup->AppendSeparator();
-					typedef pair <int, FavoriteVolume> FavMapPair;
-					foreach (FavMapPair fp, Frame->FavoriteVolumesMenuMap)
-					{
-						Gui->AppendToMenu (*popup, LangString["MOUNT"] + L" " + wstring (fp.second.Path) + (fp.second.MountPoint.IsEmpty() ? L"" : L"  " + wstring (fp.second.MountPoint)),
-							this, wxCommandEventHandler (TaskBarIcon::OnFavoriteVolumeMenuItemSelected), fp.first)->Enable (!Busy);
-					}
-				}
-
-				// Mounted volumes
-				VolumeInfoList mountedVolumes = Core->GetMountedVolumes();
-				if (!mountedVolumes.empty())
-				{
-					if (Gui->GetPreferences().BackgroundTaskMenuOpenItemsEnabled)
-					{
-						popup->AppendSeparator();
-						OpenMap.clear();
-						foreach (shared_ptr <VolumeInfo> volume, mountedVolumes)
-						{
-							if (!volume->MountPoint.IsEmpty())
-							{
-								wxString label = LangString["OPEN"] + L" " + wstring (volume->MountPoint) + L" (" + wstring (volume->Path) + L")";
-								wxMenuItem *item = Gui->AppendToMenu (*popup, label, this, wxCommandEventHandler (TaskBarIcon::OnOpenMenuItemSelected));
-								OpenMap[item->GetId()] = volume;
-							}
-						}
-					}
-
-					if (Gui->GetPreferences().BackgroundTaskMenuDismountItemsEnabled)
-					{
-						popup->AppendSeparator();
-						DismountMap.clear();
-						foreach (shared_ptr <VolumeInfo> volume, mountedVolumes)
-						{
-							wxString label = LangString["DISMOUNT"] + L" ";
-
-							if (!volume->MountPoint.IsEmpty())
-								label += wstring (volume->MountPoint) + L" (" + wstring (volume->Path) + L")";
-							else
-								label += wstring (volume->Path);
-
-							wxMenuItem *item = Gui->AppendToMenu (*popup, label, this, wxCommandEventHandler (TaskBarIcon::OnDismountMenuItemSelected));
-							item->Enable (!Busy);
-							DismountMap[item->GetId()] = volume;
-						}
-					}
-				}
-
 				popup->AppendSeparator();
 				Gui->AppendToMenu (*popup, _("Preferences..."), this, wxCommandEventHandler (TaskBarIcon::OnPreferencesMenuItemSelected))->Enable (!Busy);
 #ifndef TC_MACOSX
@@ -1411,6 +1361,30 @@ namespace TrueCrypt
 		}
 	}
 
+	void MainFrame::SetBusy (bool busy)
+	{
+		gtk_widget_set_sensitive(indicator_item_mountfavorites, !busy);
+		gtk_widget_set_sensitive(indicator_item_dismountall, !busy);
+		gtk_widget_set_sensitive(indicator_item_prefs, !busy);
+		gtk_widget_set_sensitive(indicator_item_exit, !busy /*&& CanExit()*/);
+	}
+
+	static void IndicatorOnShowHideMenuItemSelected (GtkWidget *widget, MainFrame *self) { Gui->SetBackgroundMode (!Gui->IsInBackgroundMode()); }
+	static void IndicatorOnMountAllFavoritesMenuItemSelected (GtkWidget *widget, MainFrame *self) { self->SetBusy(true); self->MountAllFavorites (); self->SetBusy(false); }
+	static void IndicatorOnDismountAllMenuItemSelected (GtkWidget *widget, MainFrame *self) { self->SetBusy(true); Gui->DismountAllVolumes(); self->SetBusy(false); }
+	static void IndicatorOnPreferencesMenuItemSelected (GtkWidget *widget, MainFrame *self) {
+		self->SetBusy(true);
+		PreferencesDialog dialog (self);
+		dialog.ShowModal();
+		self->SetBusy(false);
+	}
+	static void IndicatorOnExitMenuItemSelected (GtkWidget *widget, MainFrame *self) {
+		self->SetBusy(true);
+		if (Core->GetMountedVolumes().empty() || Gui->AskYesNo (LangString ["CONFIRM_EXIT"], false, true))
+			self->Close (true);
+		self->SetBusy(false);
+	}
+
 	void MainFrame::ShowTaskBarIcon (bool show)
 	{
 		if (!show && mTaskBarIcon->IsIconInstalled())
@@ -1419,9 +1393,41 @@ namespace TrueCrypt
 		}
 		else if (show && !mTaskBarIcon->IsIconInstalled())
 		{
-#ifndef TC_MACOSX
-			mTaskBarIcon->SetIcon (Resources::GetTrueCryptIcon(), L"TrueCrypt");
-#endif
+			if (indicator == NULL) {
+				indicator = app_indicator_new ("truecrypt", "truecrypt-indicator", APP_INDICATOR_CATEGORY_APPLICATION_STATUS);
+				app_indicator_set_status (indicator, APP_INDICATOR_STATUS_ACTIVE);
+
+				GtkWidget *menu = gtk_menu_new();
+
+				indicator_item_showhide = gtk_menu_item_new_with_label (LangString[Gui->IsInBackgroundMode() ? "SHOW_TC" : "HIDE_TC"].mb_str());
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_showhide);
+				g_signal_connect (indicator_item_showhide, "activate", G_CALLBACK (IndicatorOnShowHideMenuItemSelected), this);
+
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), gtk_separator_menu_item_new());
+
+				indicator_item_mountfavorites = gtk_menu_item_new_with_label ("Mount Favorite Volumes");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_mountfavorites);
+				g_signal_connect (indicator_item_mountfavorites, "activate", G_CALLBACK (IndicatorOnMountAllFavoritesMenuItemSelected), this);
+
+				indicator_item_dismountall = gtk_menu_item_new_with_label ("Dismount All");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_dismountall);
+				g_signal_connect (indicator_item_dismountall, "activate", G_CALLBACK (IndicatorOnDismountAllMenuItemSelected), this);
+
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), gtk_separator_menu_item_new());
+
+				indicator_item_prefs = gtk_menu_item_new_with_label ("Preferences...");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_prefs);
+				g_signal_connect (indicator_item_prefs, "activate", G_CALLBACK (IndicatorOnPreferencesMenuItemSelected), this);
+
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), gtk_separator_menu_item_new());
+
+				indicator_item_exit = gtk_menu_item_new_with_label ("Exit");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_exit);
+				g_signal_connect (indicator_item_exit, "activate", G_CALLBACK (IndicatorOnExitMenuItemSelected), this);
+
+				gtk_widget_show_all (menu);
+				app_indicator_set_menu (indicator, GTK_MENU (menu));
+			}
 		}
 	}
 
diff --git a/Main/Forms/MainFrame.h b/Main/Forms/MainFrame.h
index 5b775ab..cd43e4e 100644
--- a/Main/Forms/MainFrame.h
+++ b/Main/Forms/MainFrame.h
@@ -9,6 +9,10 @@
 #ifndef TC_HEADER_Main_Forms_MainFrame
 #define TC_HEADER_Main_Forms_MainFrame
 
+#define GSocket GlibGSocket
+#include <libappindicator/app-indicator.h>
+#undef GSocket
+
 #include "Forms.h"
 #include "ChangePasswordDialog.h"
 
@@ -27,6 +31,16 @@ namespace TrueCrypt
 		static FilePath GetShowRequestFifoPath () { return Application::GetConfigFilePath (L".show-request-queue", true); }
 #endif
 
+		void MountAllFavorites ();
+
+		AppIndicator *indicator;
+		GtkWidget *indicator_item_showhide;
+		GtkWidget *indicator_item_mountfavorites;
+		GtkWidget *indicator_item_dismountall;
+		GtkWidget *indicator_item_prefs;
+		GtkWidget *indicator_item_exit;
+		void SetBusy (bool busy);
+
 	protected:
 		enum
 		{
@@ -60,7 +74,6 @@ namespace TrueCrypt
 		void LoadFavoriteVolumes ();
 		void LoadPreferences ();
 		void MountAllDevices ();
-		void MountAllFavorites ();
 		void MountVolume ();
 		void OnAboutMenuItemSelected (wxCommandEvent& event);
 		void OnActivate (wxActivateEvent& event);
diff --git a/Main/Forms/PreferencesDialog.cpp b/Main/Forms/PreferencesDialog.cpp
index b10a5cd..af7490a 100644
--- a/Main/Forms/PreferencesDialog.cpp
+++ b/Main/Forms/PreferencesDialog.cpp
@@ -11,6 +11,7 @@
 #ifdef TC_WINDOWS
 #include <wx/msw/registry.h>
 #endif
+#include "Platform/Unix/Process.h"
 #include "Common/SecurityToken.h"
 #include "Main/Main.h"
 #include "Main/Application.h"
@@ -59,9 +60,6 @@ namespace TrueCrypt
 		TC_CHECK_BOX_VALIDATOR (BackgroundTaskEnabled);
 		TC_CHECK_BOX_VALIDATOR (CloseBackgroundTaskOnNoVolumes);
 		CloseBackgroundTaskOnNoVolumesCheckBox->Show (!Core->IsInPortableMode());
-		TC_CHECK_BOX_VALIDATOR (BackgroundTaskMenuDismountItemsEnabled);
-		TC_CHECK_BOX_VALIDATOR (BackgroundTaskMenuMountItemsEnabled);
-		TC_CHECK_BOX_VALIDATOR (BackgroundTaskMenuOpenItemsEnabled);
 
 		// Encryption
 		AesHwCpuSupportedStaticText->SetLabel (
@@ -103,7 +101,10 @@ namespace TrueCrypt
 #endif
 
 #ifndef TC_WINDOWS
-		LogOnSizer->Show (false);
+		// LogOnSizer->Show (false);
+		StartOnLogonCheckBox->Show (false);
+		MountFavoritesOnLogonCheckBox->Show (false);
+		MountDevicesOnLogonCheckBox->Show (false);
 		MountRemovableCheckBox->Show (false);
 		CloseExplorerWindowsOnDismountCheckBox->Show (false);
 #endif
@@ -272,6 +273,18 @@ namespace TrueCrypt
 			BackgroundTaskEnabledCheckBox->SetValue (!Gui->AskYesNo (LangString["CONFIRM_BACKGROUND_TASK_DISABLED"], false, true));
 	}
 
+	void PreferencesDialog::OnConfigureAutostartButtonClick (wxCommandEvent& event)
+	{
+		// Launch "Startup Applications"
+		try
+		{
+			list <string> args;
+			Process::Execute ("gnome-session-properties", args);
+		}
+		// catch (TimeOut&) { }
+		catch (exception &e) { Gui->ShowError (e); }
+	}
+
 	void PreferencesDialog::OnNoHardwareCryptoCheckBoxClick (wxCommandEvent& event)
 	{
 		if (event.IsChecked())
diff --git a/Main/Forms/PreferencesDialog.h b/Main/Forms/PreferencesDialog.h
index 412d7c4..fa67ac4 100644
--- a/Main/Forms/PreferencesDialog.h
+++ b/Main/Forms/PreferencesDialog.h
@@ -26,6 +26,7 @@ namespace TrueCrypt
 	protected:
 		void OnAssignHotkeyButtonClick (wxCommandEvent& event);
 		void OnBackgroundTaskEnabledCheckBoxClick (wxCommandEvent& event);
+		void OnConfigureAutostartButtonClick (wxCommandEvent& event);
 		void OnCancelButtonClick (wxCommandEvent& event) { Close(); }
 		void OnClose (wxCloseEvent& event);
 		void OnDismountOnPowerSavingCheckBoxClick (wxCommandEvent& event);
diff --git a/Main/GraphicUserInterface.cpp b/Main/GraphicUserInterface.cpp
index 3a9932d..414e623 100644
--- a/Main/GraphicUserInterface.cpp
+++ b/Main/GraphicUserInterface.cpp
@@ -1469,6 +1469,8 @@ namespace TrueCrypt
 		}
 
 		BackgroundMode = state;
+
+		gtk_menu_item_set_label ((GtkMenuItem*) ((MainFrame*) mMainFrame)->indicator_item_showhide, LangString[Gui->IsInBackgroundMode() ? "SHOW_TC" : "HIDE_TC"].mb_str());
 	}
 
 	void GraphicUserInterface::SetListCtrlColumnWidths (wxListCtrl *listCtrl, list <int> columnWidthPermilles, bool hasVerticalScrollbar) const
diff --git a/Main/Main.make b/Main/Main.make
index 2a00269..2a5c260 100644
--- a/Main/Main.make
+++ b/Main/Main.make
@@ -72,6 +72,9 @@ endif
 
 CXXFLAGS += -I$(BASE_DIR)/Main
 
+ifndef TC_NO_GUI
+LIBS += $(shell pkg-config --libs appindicator-0.1)
+endif
 
 #------ wxWidgets configuration ------
 
diff --git a/Main/UserPreferences.cpp b/Main/UserPreferences.cpp
index e0e8233..ec7abaa 100644
--- a/Main/UserPreferences.cpp
+++ b/Main/UserPreferences.cpp
@@ -67,9 +67,6 @@ namespace TrueCrypt
 #define TC_CONFIG_SET(NAME) SetValue (configMap[L###NAME], NAME)
 
 			TC_CONFIG_SET (BackgroundTaskEnabled);
-			TC_CONFIG_SET (BackgroundTaskMenuDismountItemsEnabled);
-			TC_CONFIG_SET (BackgroundTaskMenuMountItemsEnabled);
-			TC_CONFIG_SET (BackgroundTaskMenuOpenItemsEnabled);
 			TC_CONFIG_SET (BeepAfterHotkeyMountDismount);
 			SetValue (configMap[L"CachePasswords"], DefaultMountOptions.CachePassword);
 			TC_CONFIG_SET (CloseBackgroundTaskOnNoVolumes);
@@ -167,9 +164,6 @@ namespace TrueCrypt
 #define TC_CONFIG_ADD(NAME) formatter.AddEntry (L###NAME, NAME)
 
 		TC_CONFIG_ADD (BackgroundTaskEnabled);
-		TC_CONFIG_ADD (BackgroundTaskMenuDismountItemsEnabled);
-		TC_CONFIG_ADD (BackgroundTaskMenuMountItemsEnabled);
-		TC_CONFIG_ADD (BackgroundTaskMenuOpenItemsEnabled);
 		TC_CONFIG_ADD (BeepAfterHotkeyMountDismount);
 		formatter.AddEntry (L"CachePasswords", DefaultMountOptions.CachePassword);
 		TC_CONFIG_ADD (CloseBackgroundTaskOnNoVolumes);
diff --git a/Main/UserPreferences.h b/Main/UserPreferences.h
index 0f862ce..36f1fb4 100644
--- a/Main/UserPreferences.h
+++ b/Main/UserPreferences.h
@@ -20,11 +20,8 @@ namespace TrueCrypt
 		UserPreferences ()
 			:
 			BackgroundTaskEnabled (true),
-			BackgroundTaskMenuDismountItemsEnabled (true),
-			BackgroundTaskMenuMountItemsEnabled (true),
-			BackgroundTaskMenuOpenItemsEnabled (true),
 			BeepAfterHotkeyMountDismount (false),
-			CloseBackgroundTaskOnNoVolumes (true),
+			CloseBackgroundTaskOnNoVolumes (false),
 			CloseExplorerWindowsOnDismount (true),
 			CloseSecurityTokenSessionsAfterMount (false),
 			DisableKernelEncryptionModeWarning (false),
@@ -60,9 +57,6 @@ namespace TrueCrypt
 		MountOptions DefaultMountOptions;
 
 		bool BackgroundTaskEnabled;
-		bool BackgroundTaskMenuDismountItemsEnabled;
-		bool BackgroundTaskMenuMountItemsEnabled;
-		bool BackgroundTaskMenuOpenItemsEnabled;
 		bool BeepAfterHotkeyMountDismount;
 		bool CloseBackgroundTaskOnNoVolumes;
 		bool CloseExplorerWindowsOnDismount;
diff --git a/Makefile b/Makefile
index cdfaad8..ae4d6c7 100644
--- a/Makefile
+++ b/Makefile
@@ -66,6 +66,8 @@ ifeq "$(origin NOGUI)" "command line"
 	export TC_NO_GUI := 1
 	C_CXX_FLAGS += -DTC_NO_GUI
 	WX_CONFIGURE_FLAGS += --disable-gui
+else
+	C_CXX_FLAGS += $(shell pkg-config --cflags appindicator-0.1)
 endif
 
 ifdef PKCS11_INC
