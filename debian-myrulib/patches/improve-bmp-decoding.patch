Description: Improve BMP decoding
 The BMP decoder did not handle images that are not stored upside down but
 straight up (in which case the height is negative). Also with RLE4 or RLE8
 compressed images the 'end of scanline' RLE marker was not handled correctly.
Author: DS
Bug: http://trac.wxwidgets.org/ticket/13650
Applied-Upstream: http://trac.wxwidgets.org/changeset/69732
Last-Update: 2012-06-01

Index: wxWidgets/branches/WX_2_8_BRANCH/src/common/imagbmp.cpp
===================================================================
--- a/wx/src/common/imagbmp.cpp (revision 67297)
+++ b/wx/src/common/imagbmp.cpp (revision 69732)
@@ -479,4 +479,12 @@
         cmap = NULL;
 
+    bool isUpsideDown = true;
+
+    if (height < 0)
+    {
+        isUpsideDown = false;
+        height = -height;
+    }
+
     // destroy existing here instead of:
     image->Destroy();
@@ -631,7 +639,8 @@
     int linesize = ((width * bpp + 31) / 32) * 4;
 
-    /* BMPs are stored upside down */
-    for ( int line = (height - 1); line >= 0; line-- )
-    {
+    for ( int row = 0; row < height; row++ )
+    {
+        int line = isUpsideDown ? height - 1 - row : row;
+
         int linepos = 0;
         for ( int column = 0; column < width ; )
@@ -663,19 +672,22 @@
                             if ( aByte == 0 )
                             {
-                                if ( column > 0 )
-                                    column = width;
+                                // end of scanline marker
+                                column = width;
+                                row--;
                             }
                             else if ( aByte == 1 )
                             {
+                                // end of RLE data marker, stop decoding
                                 column = width;
-                                line = -1;
+                                row = height;
                             }
                             else if ( aByte == 2 )
                             {
+                                // delta marker, move in image
                                 aByte = stream.GetC();
                                 column += aByte;
                                 linepos = column * bpp / 4;
                                 aByte = stream.GetC();
-                                line -= aByte; // upside down
+                                row += aByte; // upside down
                             }
                             else
@@ -746,18 +758,22 @@
                             if ( aByte == 0 )
                             {
-                                /* column = width; */
+                                // end of scanline marker
+                                column = width;
+                                row--;
                             }
                             else if ( aByte == 1 )
                             {
+                                // end of RLE data marker, stop decoding
                                 column = width;
-                                line = -1;
+                                row = height;
                             }
                             else if ( aByte == 2 )
                             {
+                                // delta marker, move in image
                                 aByte = stream.GetC();
                                 column += aByte;
                                 linepos = column * bpp / 8;
                                 aByte = stream.GetC();
-                                line += aByte;
+                                row -= aByte;
                             }
                             else
